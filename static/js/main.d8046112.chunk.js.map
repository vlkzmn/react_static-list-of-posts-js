{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","CommentList","comments","length","map","id","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,QACtBC,KAAQC,EADc,EACdA,KAAMC,EADQ,EACRA,MADQ,OAGtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCNQI,G,MAAc,SAAC,GAAD,QACzBC,QAAWL,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOK,EADC,EACDA,KADC,OAGzB,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGF,IAGF,OAED,mBACEE,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAIL,qBAAKC,UAAU,oBAAf,SACGI,SCjBMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACuB,IAApBA,EAASC,OACR,mBAAG,UAAQ,oBAAX,6BAEA,qBAAKP,UAAU,cAAf,SACGM,EAASE,KAAI,SAAAL,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQM,YCNzCC,EAAW,SAAC,GAAD,QACtBC,KAAQC,EADc,EACdA,MAAOR,EADO,EACPA,KAAMP,EADC,EACDA,KAAMS,EADL,EACKA,SADL,OAGtB,sBAAKN,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGY,IAGH,8BACG,eAED,cAAC,EAAD,CAAUf,KAAMA,UAIpB,mBAAGG,UAAU,iBAAb,SACGI,IAGH,uBAEA,cAAC,EAAD,CAAaE,SAAUA,QCxBdO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKd,UAAU,WAAf,SACGc,EAAMN,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKF,UCW/B,IAAMK,EAAQC,EAAgBP,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cd,MAXmBmB,EAWDL,EAAKK,OAVhBC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKY,KAAOO,MAAW,MAW3DV,UARuBa,EAQGR,EAAKF,GAPxBW,EACJC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,MAAW,QAFrD,IAAyBA,EAJJH,KAeRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUc,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d8046112.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: { name, email },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","export const CommentInfo = ({\n  comment: { name, email, body },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    {comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo comment={comment} key={comment.id} />\n        ))}\n      </div>\n    )}\n  </>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({\n  post: { title, body, user, comments },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    <CommentList comments={comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer\n    .filter(comment => comment.postId === postId) || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}